#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapstoneProjectCore
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SocialBuy")]
	public partial class CapstoneProjectsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertUserType(UserType instance);
    partial void UpdateUserType(UserType instance);
    partial void DeleteUserType(UserType instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertFollow(Follow instance);
    partial void UpdateFollow(Follow instance);
    partial void DeleteFollow(Follow instance);
    partial void InsertImage(Image instance);
    partial void UpdateImage(Image instance);
    partial void DeleteImage(Image instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrderDetail(OrderDetail instance);
    partial void UpdateOrderDetail(OrderDetail instance);
    partial void DeleteOrderDetail(OrderDetail instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProduct_Image(Product_Image instance);
    partial void UpdateProduct_Image(Product_Image instance);
    partial void DeleteProduct_Image(Product_Image instance);
    partial void InsertProduct_Like(Product_Like instance);
    partial void UpdateProduct_Like(Product_Like instance);
    partial void DeleteProduct_Like(Product_Like instance);
    partial void InsertStatusOrder(StatusOrder instance);
    partial void UpdateStatusOrder(StatusOrder instance);
    partial void DeleteStatusOrder(StatusOrder instance);
    partial void InsertStatusProduct(StatusProduct instance);
    partial void UpdateStatusProduct(StatusProduct instance);
    partial void DeleteStatusProduct(StatusProduct instance);
    partial void InsertStatusStore(StatusStore instance);
    partial void UpdateStatusStore(StatusStore instance);
    partial void DeleteStatusStore(StatusStore instance);
    partial void InsertStore(Store instance);
    partial void UpdateStore(Store instance);
    partial void DeleteStore(Store instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertCommentProduct(CommentProduct instance);
    partial void UpdateCommentProduct(CommentProduct instance);
    partial void DeleteCommentProduct(CommentProduct instance);
    #endregion
		
		public CapstoneProjectsDataContext() : 
				base(global::CapstoneProjectCore.Properties.Settings.Default.SocialBuyConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CapstoneProjectsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CapstoneProjectsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CapstoneProjectsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CapstoneProjectsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<UserType> UserTypes
		{
			get
			{
				return this.GetTable<UserType>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Follow> Follows
		{
			get
			{
				return this.GetTable<Follow>();
			}
		}
		
		public System.Data.Linq.Table<Ganeral> Ganerals
		{
			get
			{
				return this.GetTable<Ganeral>();
			}
		}
		
		public System.Data.Linq.Table<Image> Images
		{
			get
			{
				return this.GetTable<Image>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<OrderDetail> OrderDetails
		{
			get
			{
				return this.GetTable<OrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Product_Image> Product_Images
		{
			get
			{
				return this.GetTable<Product_Image>();
			}
		}
		
		public System.Data.Linq.Table<Product_Like> Product_Likes
		{
			get
			{
				return this.GetTable<Product_Like>();
			}
		}
		
		public System.Data.Linq.Table<StatusOrder> StatusOrders
		{
			get
			{
				return this.GetTable<StatusOrder>();
			}
		}
		
		public System.Data.Linq.Table<StatusProduct> StatusProducts
		{
			get
			{
				return this.GetTable<StatusProduct>();
			}
		}
		
		public System.Data.Linq.Table<StatusStore> StatusStores
		{
			get
			{
				return this.GetTable<StatusStore>();
			}
		}
		
		public System.Data.Linq.Table<Store> Stores
		{
			get
			{
				return this.GetTable<Store>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<CommentProduct> CommentProducts
		{
			get
			{
				return this.GetTable<CommentProduct>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Account_Delete")]
		public int Account_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountId", DbType="Int")] System.Nullable<int> accountId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Account_Update")]
		public int Account_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountId", DbType="Int")] System.Nullable<int> accountId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(100)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountType", DbType="Int")] System.Nullable<int> accountType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginTwitter", DbType="Bit")] System.Nullable<bool> loginTwitter, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginFacebook", DbType="Bit")] System.Nullable<bool> loginFacebook)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountId, email, password, accountType, loginTwitter, loginFacebook);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Account_Insert")]
		public ISingleResult<Account> Account_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(100)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountType", DbType="Int")] System.Nullable<int> accountType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginTwitter", DbType="Bit")] System.Nullable<bool> loginTwitter, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginFacebook", DbType="Bit")] System.Nullable<bool> loginFacebook)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, password, accountType, loginTwitter, loginFacebook);
			return ((ISingleResult<Account>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Categories_Delete")]
		public int Categories_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoriesId", DbType="Int")] System.Nullable<int> categoriesId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoriesId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Categories_Get_List")]
		public ISingleResult<Category> Categories_Get_List()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Category>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Categories_GetByCategoriesId")]
		public ISingleResult<Category> Categories_GetByCategoriesId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoriesId", DbType="Int")] System.Nullable<int> categoriesId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoriesId);
			return ((ISingleResult<Category>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Categories_Insert")]
		public ISingleResult<Category> Categories_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoriesName", DbType="NVarChar(100)")] string categoriesName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(500)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDelete", DbType="Bit")] System.Nullable<bool> isDelete, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeamplateDetailJson", DbType="NText")] string teamplateDetailJson)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoriesName, description, isDelete, teamplateDetailJson);
			return ((ISingleResult<Category>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Categories_Update")]
		public int Categories_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoriesId", DbType="Int")] System.Nullable<int> categoriesId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoriesName", DbType="NVarChar(100)")] string categoriesName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(500)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDelete", DbType="Bit")] System.Nullable<bool> isDelete, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeamplateDetailJson", DbType="NText")] string teamplateDetailJson)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoriesId, categoriesName, description, isDelete, teamplateDetailJson);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Follow_Delete")]
		public int Follow_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FollowIdFrom", DbType="Int")] System.Nullable<int> followIdFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FollowIdTo", DbType="Int")] System.Nullable<int> followIdTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), followIdFrom, followIdTo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Follow_Get_List_Follower")]
		public ISingleResult<Follow> Follow_Get_List_Follower([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FollowID", DbType="Int")] System.Nullable<int> followID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FollowType", DbType="Int")] System.Nullable<int> followType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), followID, followType);
			return ((ISingleResult<Follow>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Follow_Get_List_Following")]
		public ISingleResult<Follow> Follow_Get_List_Following([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FollowID", DbType="Int")] System.Nullable<int> followID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FollowType", DbType="Int")] System.Nullable<int> followType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), followID, followType);
			return ((ISingleResult<Follow>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Follow_Insert")]
		public int Follow_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FollowIdFrom", DbType="Int")] System.Nullable<int> followIdFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FollowIdTo", DbType="Int")] System.Nullable<int> followIdTo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FollowType", DbType="Int")] System.Nullable<int> followType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), followIdFrom, followIdTo, followType);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CommentProduct_Delete")]
		public int CommentProduct_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommentID", DbType="Int")] System.Nullable<int> commentID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), commentID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CommentProduct_Get_List")]
		public ISingleResult<CommentProduct> CommentProduct_Get_List()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<CommentProduct>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CommentProduct_GetListByProductID")]
		public ISingleResult<CommentProduct> CommentProduct_GetListByProductID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productID);
			return ((ISingleResult<CommentProduct>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CommentProduct_Insert")]
		public ISingleResult<CommentProduct> CommentProduct_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommentContent", DbType="NText")] string commentContent, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreateDate", DbType="DateTime")] System.Nullable<System.DateTime> createDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), commentContent, createDate, userID, productID);
			return ((ISingleResult<CommentProduct>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Image_Delete")]
		public int Image_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImageId", DbType="Int")] System.Nullable<int> imageId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), imageId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Image_GetByImageId")]
		public ISingleResult<Image> Image_GetByImageId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImageId", DbType="Int")] System.Nullable<int> imageId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), imageId);
			return ((ISingleResult<Image>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Image_Update")]
		public int Image_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImageId", DbType="Int")] System.Nullable<int> imageId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImageName", DbType="NVarChar(100)")] string imageName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NText")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Path", DbType="NVarChar(100)")] string path, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDelete", DbType="Bit")] System.Nullable<bool> isDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), imageId, imageName, description, path, isDelete);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Image_Insert")]
		public ISingleResult<Image> Image_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImageName", DbType="NVarChar(100)")] string imageName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NText")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Path", DbType="NVarChar(100)")] string path, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDelete", DbType="Bit")] System.Nullable<bool> isDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), imageName, description, path, isDelete);
			return ((ISingleResult<Image>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Order_Delete")]
		public int Order_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Order_Get_ListByStore")]
		public ISingleResult<Order> Order_Get_ListByStore([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreID", DbType="Int")] System.Nullable<int> storeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusID", DbType="Int")] System.Nullable<int> statusID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storeID, statusID);
			return ((ISingleResult<Order>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Order_Get_ListByUser")]
		public ISingleResult<Order> Order_Get_ListByUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusID", DbType="Int")] System.Nullable<int> statusID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, statusID);
			return ((ISingleResult<Order>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Order_GetByOrderId")]
		public ISingleResult<Order> Order_GetByOrderId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId);
			return ((ISingleResult<Order>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Order_Insert")]
		public ISingleResult<Order> Order_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreateDate", DbType="DateTime")] System.Nullable<System.DateTime> createDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RecipientName", DbType="NVarChar(100)")] string recipientName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RecipientAddress", DbType="NVarChar(200)")] string recipientAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RecipientTel", DbType="NVarChar(20)")] string recipientTel, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NText")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransportFee", DbType="Int")] System.Nullable<int> transportFee, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalMonney", DbType="Decimal(18,0)")] System.Nullable<decimal> totalMonney, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreId", DbType="Int")] System.Nullable<int> storeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statusId, createDate, userId, recipientName, recipientAddress, recipientTel, email, description, transportFee, totalMonney, storeId);
			return ((ISingleResult<Order>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Order_Update")]
		public int Order_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreateDate", DbType="DateTime")] System.Nullable<System.DateTime> createDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RecipientName", DbType="NVarChar(100)")] string recipientName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RecipientAddress", DbType="NVarChar(200)")] string recipientAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RecipientTel", DbType="NVarChar(20)")] string recipientTel, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NText")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransportFee", DbType="Int")] System.Nullable<int> transportFee, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalMonney", DbType="Decimal(18,0)")] System.Nullable<decimal> totalMonney, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreId", DbType="Int")] System.Nullable<int> storeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId, statusId, createDate, userId, recipientName, recipientAddress, recipientTel, email, description, transportFee, totalMonney, storeId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrderDetail_Update")]
		public int OrderDetail_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderDetailId", DbType="Int")] System.Nullable<int> orderDetailId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductId", DbType="Int")] System.Nullable<int> productId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Int")] System.Nullable<int> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PriceCurrent", DbType="Decimal(18,0)")] System.Nullable<decimal> priceCurrent, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDelete", DbType="Bit")] System.Nullable<bool> isDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderDetailId, productId, amount, priceCurrent, orderId, isDelete);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrderDetail_Insert")]
		public ISingleResult<OrderDetail> OrderDetail_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductId", DbType="Int")] System.Nullable<int> productId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Amount", DbType="Int")] System.Nullable<int> amount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PriceCurrent", DbType="Decimal(18,0)")] System.Nullable<decimal> priceCurrent, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDelete", DbType="Bit")] System.Nullable<bool> isDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productId, amount, priceCurrent, orderId, isDelete);
			return ((ISingleResult<OrderDetail>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrderDetail_GetByProductId")]
		public ISingleResult<OrderDetail> OrderDetail_GetByProductId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductId", DbType="Int")] System.Nullable<int> productId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productId);
			return ((ISingleResult<OrderDetail>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrderDetail_GetByOrderId")]
		public ISingleResult<OrderDetail> OrderDetail_GetByOrderId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderId", DbType="Int")] System.Nullable<int> orderId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderId);
			return ((ISingleResult<OrderDetail>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrderDetail_GetByOrderDetailId")]
		public ISingleResult<OrderDetail> OrderDetail_GetByOrderDetailId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderDetailId", DbType="Int")] System.Nullable<int> orderDetailId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderDetailId);
			return ((ISingleResult<OrderDetail>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.OrderDetail_Delete")]
		public int OrderDetail_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderDetailId", DbType="Int")] System.Nullable<int> orderDetailId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderDetailId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Product_Delete")]
		public int Product_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductId", DbType="Int")] System.Nullable<int> productId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Product_Get_List")]
		public ISingleResult<Product> Product_Get_List()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Product>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Product_GetByCategoriesId")]
		public ISingleResult<Product> Product_GetByCategoriesId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoriesId", DbType="Int")] System.Nullable<int> categoriesId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoriesId);
			return ((ISingleResult<Product>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Product_GetByProductId")]
		public ISingleResult<Product> Product_GetByProductId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductId", DbType="Int")] System.Nullable<int> productId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productId);
			return ((ISingleResult<Product>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Product_Insert")]
		public ISingleResult<Product> Product_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductName", DbType="NVarChar(200)")] string productName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NText")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PriceCurrent", DbType="Decimal(18,0)")] System.Nullable<decimal> priceCurrent, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoriesId", DbType="Int")] System.Nullable<int> categoriesId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreId", DbType="Int")] System.Nullable<int> storeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalLike", DbType="Int")] System.Nullable<int> totalLike, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalComment", DbType="Int")] System.Nullable<int> totalComment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImageId", DbType="Int")] System.Nullable<int> imageId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MoreDetailJson", DbType="NText")] string moreDetailJson, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalBuy", DbType="Int")] System.Nullable<int> totalBuy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productName, description, priceCurrent, categoriesId, storeId, totalLike, totalComment, statusId, imageId, moreDetailJson, totalBuy);
			return ((ISingleResult<Product>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Product_Update")]
		public int Product_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductId", DbType="Int")] System.Nullable<int> productId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductName", DbType="NVarChar(200)")] string productName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NText")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PriceCurrent", DbType="Decimal(18,0)")] System.Nullable<decimal> priceCurrent, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoriesId", DbType="Int")] System.Nullable<int> categoriesId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreId", DbType="Int")] System.Nullable<int> storeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalLike", DbType="Int")] System.Nullable<int> totalLike, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalComment", DbType="Int")] System.Nullable<int> totalComment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImageId", DbType="Int")] System.Nullable<int> imageId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MoreDetailJson", DbType="NText")] string moreDetailJson, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalBuy", DbType="Int")] System.Nullable<int> totalBuy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productId, productName, description, priceCurrent, categoriesId, storeId, totalLike, totalComment, statusId, imageId, moreDetailJson, totalBuy);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Product_Likes_Delete")]
		public int Product_Likes_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductId", DbType="Int")] System.Nullable<int> productId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, productId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Product_Likes_GetByProductId")]
		public ISingleResult<User> Product_Likes_GetByProductId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductId", DbType="Int")] System.Nullable<int> productId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productId);
			return ((ISingleResult<User>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Product_Likes_GetByUserIdProductId")]
		public ISingleResult<Product_Likes_GetByUserIdProductIdResult> Product_Likes_GetByUserIdProductId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductId", DbType="Int")] System.Nullable<int> productId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, productId);
			return ((ISingleResult<Product_Likes_GetByUserIdProductIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Product_Likes_Insert")]
		public int Product_Likes_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductId", DbType="Int")] System.Nullable<int> productId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, productId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Product_Likes_GetByUserId")]
		public ISingleResult<Product> Product_Likes_GetByUserId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<Product>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StatusOrder_Delete")]
		public int StatusOrder_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statusId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StatusOrder_Get_List")]
		public ISingleResult<StatusOrder> StatusOrder_Get_List()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<StatusOrder>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StatusOrder_GetByStatusId")]
		public ISingleResult<StatusOrder> StatusOrder_GetByStatusId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statusId);
			return ((ISingleResult<StatusOrder>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StatusOrder_Insert")]
		public ISingleResult<StatusOrder> StatusOrder_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusName", DbType="NVarChar(100)")] string statusName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(200)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDelete", DbType="Bit")] System.Nullable<bool> isDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statusName, description, isDelete);
			return ((ISingleResult<StatusOrder>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StatusOrder_Update")]
		public int StatusOrder_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusName", DbType="NVarChar(100)")] string statusName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(200)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDelete", DbType="Bit")] System.Nullable<bool> isDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statusId, statusName, description, isDelete);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StatusProduct_Delete")]
		public int StatusProduct_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statusId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StatusProduct_Get_List")]
		public ISingleResult<StatusProduct> StatusProduct_Get_List()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<StatusProduct>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StatusProduct_GetByStatusId")]
		public ISingleResult<StatusProduct> StatusProduct_GetByStatusId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statusId);
			return ((ISingleResult<StatusProduct>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StatusProduct_Insert")]
		public ISingleResult<StatusProduct> StatusProduct_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusName", DbType="NVarChar(50)")] string statusName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NText")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDelete", DbType="Bit")] System.Nullable<bool> isDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statusName, description, isDelete);
			return ((ISingleResult<StatusProduct>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StatusProduct_Update")]
		public int StatusProduct_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusName", DbType="NVarChar(50)")] string statusName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NText")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDelete", DbType="Bit")] System.Nullable<bool> isDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statusId, statusName, description, isDelete);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StatusStore_Update")]
		public int StatusStore_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusName", DbType="NVarChar(100)")] string statusName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NText")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDelete", DbType="Bit")] System.Nullable<bool> isDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statusId, statusName, description, isDelete);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StatusStore_GetByStatusId")]
		public ISingleResult<StatusStore> StatusStore_GetByStatusId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statusId);
			return ((ISingleResult<StatusStore>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StatusStore_Get_List")]
		public ISingleResult<StatusStore> StatusStore_Get_List()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<StatusStore>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StatusStore_Delete")]
		public int StatusStore_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statusId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StatusStore_Insert")]
		public ISingleResult<StatusStore> StatusStore_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusName", DbType="NVarChar(100)")] string statusName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NText")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDelete", DbType="Bit")] System.Nullable<bool> isDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statusName, description, isDelete);
			return ((ISingleResult<StatusStore>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserType_Delete")]
		public int UserType_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeId", DbType="Int")] System.Nullable<int> userTypeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userTypeId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserType_Get_List")]
		public ISingleResult<UserType> UserType_Get_List()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<UserType>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserType_GetByUserTypeId")]
		public ISingleResult<UserType> UserType_GetByUserTypeId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeId", DbType="Int")] System.Nullable<int> userTypeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userTypeId);
			return ((ISingleResult<UserType>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserType_Update")]
		public int UserType_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeId", DbType="Int")] System.Nullable<int> userTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeName", DbType="NVarChar(100)")] string userTypeName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NText")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDelete", DbType="Bit")] System.Nullable<bool> isDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userTypeId, userTypeName, description, isDelete);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserType_Insert")]
		public ISingleResult<UserType> UserType_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeName", DbType="NVarChar(100)")] string userTypeName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NText")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsDelete", DbType="Bit")] System.Nullable<bool> isDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userTypeName, description, isDelete);
			return ((ISingleResult<UserType>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Account_Login")]
		public ISingleResult<Account> Account_Login([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EMail", DbType="NVarChar(100)")] string eMail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(100)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eMail, password);
			return ((ISingleResult<Account>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.User_Delete")]
		public int User_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.User_Insert")]
		public int User_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="NVarChar(50)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="NVarChar(50)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="About", DbType="NVarChar(200)")] string about, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImageAvartarId", DbType="Int")] System.Nullable<int> imageAvartarId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="NVarChar(50)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeId", DbType="Int")] System.Nullable<int> userTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Isdelete", DbType="Bit")] System.Nullable<bool> isdelete, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalFllowers", DbType="Int")] System.Nullable<int> totalFllowers, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalFllowing", DbType="Int")] System.Nullable<int> totalFllowing, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalLikes", DbType="Int")] System.Nullable<int> totalLikes)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, firstName, lastName, about, imageAvartarId, address, userTypeId, isdelete, totalFllowers, totalFllowing, totalLikes);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.User_Get_List")]
		public ISingleResult<User> User_Get_List()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<User>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.User_GetByUserId")]
		public ISingleResult<User> User_GetByUserId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId);
			return ((ISingleResult<User>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.User_GetByUserTypeId")]
		public ISingleResult<User> User_GetByUserTypeId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeId", DbType="Int")] System.Nullable<int> userTypeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userTypeId);
			return ((ISingleResult<User>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.User_Update")]
		public int User_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="Int")] System.Nullable<int> userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="NVarChar(50)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="NVarChar(50)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="About", DbType="NVarChar(200)")] string about, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImageAvartarId", DbType="Int")] System.Nullable<int> imageAvartarId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="NVarChar(50)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserTypeId", DbType="Int")] System.Nullable<int> userTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Isdelete", DbType="Bit")] System.Nullable<bool> isdelete, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalFllowers", DbType="Int")] System.Nullable<int> totalFllowers, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalFllowing", DbType="Int")] System.Nullable<int> totalFllowing, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalLikes", DbType="Int")] System.Nullable<int> totalLikes)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userId, firstName, lastName, about, imageAvartarId, address, userTypeId, isdelete, totalFllowers, totalFllowing, totalLikes);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Store_Delete")]
		public int Store_Delete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreId", DbType="Int")] System.Nullable<int> storeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storeId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Store_Get_List")]
		public ISingleResult<Store> Store_Get_List()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Store>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Store_GetByStatusId")]
		public ISingleResult<Store> Store_GetByStatusId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statusId);
			return ((ISingleResult<Store>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Store_GetByStoreId")]
		public ISingleResult<Store> Store_GetByStoreId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreId", DbType="Int")] System.Nullable<int> storeId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storeId);
			return ((ISingleResult<Store>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Store_Insert")]
		public int Store_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreId", DbType="Int")] System.Nullable<int> storeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreName", DbType="NVarChar(100)")] string storeName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="NVarChar(100)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NText")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreateDate", DbType="DateTime")] System.Nullable<System.DateTime> createDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Slogan", DbType="NText")] string slogan, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImageProfileId", DbType="Int")] System.Nullable<int> imageProfileId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImageCoverId", DbType="Int")] System.Nullable<int> imageCoverId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShipFee", DbType="Decimal(18,0)")] System.Nullable<decimal> shipFee, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalFllowers", DbType="Int")] System.Nullable<int> totalFllowers, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalFllowing", DbType="Int")] System.Nullable<int> totalFllowing, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tel", DbType="Int")] System.Nullable<int> tel)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storeId, storeName, address, description, createDate, statusId, slogan, imageProfileId, imageCoverId, shipFee, totalFllowers, totalFllowing, tel);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Store_Update")]
		public int Store_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreId", DbType="Int")] System.Nullable<int> storeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreName", DbType="NVarChar(100)")] string storeName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="NVarChar(100)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NText")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreateDate", DbType="DateTime")] System.Nullable<System.DateTime> createDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusId", DbType="Int")] System.Nullable<int> statusId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Slogan", DbType="NText")] string slogan, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImageProfileId", DbType="Int")] System.Nullable<int> imageProfileId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImageCoverId", DbType="Int")] System.Nullable<int> imageCoverId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShipFee", DbType="Decimal(18,0)")] System.Nullable<decimal> shipFee, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalFllowers", DbType="Int")] System.Nullable<int> totalFllowers, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TotalFllowing", DbType="Int")] System.Nullable<int> totalFllowing, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tel", DbType="Int")] System.Nullable<int> tel)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storeId, storeName, address, description, createDate, statusId, slogan, imageProfileId, imageCoverId, shipFee, totalFllowers, totalFllowing, tel);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private string _Email;
		
		private string _Password;
		
		private System.Nullable<int> _AccountType;
		
		private System.Nullable<bool> _LoginTwitter;
		
		private System.Nullable<bool> _LoginFacebook;
		
		private EntityRef<Store> _Store;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAccountTypeChanging(System.Nullable<int> value);
    partial void OnAccountTypeChanged();
    partial void OnLoginTwitterChanging(System.Nullable<bool> value);
    partial void OnLoginTwitterChanged();
    partial void OnLoginFacebookChanging(System.Nullable<bool> value);
    partial void OnLoginFacebookChanged();
    #endregion
		
		public Account()
		{
			this._Store = default(EntityRef<Store>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if ((this._Store.HasLoadedOrAssignedValue || this._User.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="Int")]
		public System.Nullable<int> AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginTwitter", DbType="Bit")]
		public System.Nullable<bool> LoginTwitter
		{
			get
			{
				return this._LoginTwitter;
			}
			set
			{
				if ((this._LoginTwitter != value))
				{
					this.OnLoginTwitterChanging(value);
					this.SendPropertyChanging();
					this._LoginTwitter = value;
					this.SendPropertyChanged("LoginTwitter");
					this.OnLoginTwitterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginFacebook", DbType="Bit")]
		public System.Nullable<bool> LoginFacebook
		{
			get
			{
				return this._LoginFacebook;
			}
			set
			{
				if ((this._LoginFacebook != value))
				{
					this.OnLoginFacebookChanging(value);
					this.SendPropertyChanging();
					this._LoginFacebook = value;
					this.SendPropertyChanged("LoginFacebook");
					this.OnLoginFacebookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_Account", Storage="_Store", ThisKey="AccountID", OtherKey="StoreID", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.Account = null;
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.Account = this;
						this._AccountID = value.StoreID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Account", Storage="_User", ThisKey="AccountID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Account = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Account = this;
						this._AccountID = value.UserID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserType")]
	public partial class UserType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserTypeID;
		
		private string _UserTypeName;
		
		private string _Description;
		
		private System.Nullable<bool> _IsDelete;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserTypeIDChanging(int value);
    partial void OnUserTypeIDChanged();
    partial void OnUserTypeNameChanging(string value);
    partial void OnUserTypeNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public UserType()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserTypeID
		{
			get
			{
				return this._UserTypeID;
			}
			set
			{
				if ((this._UserTypeID != value))
				{
					this.OnUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserTypeID = value;
					this.SendPropertyChanged("UserTypeID");
					this.OnUserTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeName", DbType="NVarChar(100)")]
		public string UserTypeName
		{
			get
			{
				return this._UserTypeName;
			}
			set
			{
				if ((this._UserTypeName != value))
				{
					this.OnUserTypeNameChanging(value);
					this.SendPropertyChanging();
					this._UserTypeName = value;
					this.SendPropertyChanged("UserTypeName");
					this.OnUserTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
		public System.Nullable<bool> IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserType_User", Storage="_Users", ThisKey="UserTypeID", OtherKey="UserTypeID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserType = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categories")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoriesID;
		
		private string _CategoriesName;
		
		private string _Description;
		
		private System.Nullable<bool> _IsDelete;
		
		private string _TeamplateDetailJson;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoriesIDChanging(int value);
    partial void OnCategoriesIDChanged();
    partial void OnCategoriesNameChanging(string value);
    partial void OnCategoriesNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    partial void OnTeamplateDetailJsonChanging(string value);
    partial void OnTeamplateDetailJsonChanged();
    #endregion
		
		public Category()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoriesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoriesID
		{
			get
			{
				return this._CategoriesID;
			}
			set
			{
				if ((this._CategoriesID != value))
				{
					this.OnCategoriesIDChanging(value);
					this.SendPropertyChanging();
					this._CategoriesID = value;
					this.SendPropertyChanged("CategoriesID");
					this.OnCategoriesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoriesName", DbType="NVarChar(100)")]
		public string CategoriesName
		{
			get
			{
				return this._CategoriesName;
			}
			set
			{
				if ((this._CategoriesName != value))
				{
					this.OnCategoriesNameChanging(value);
					this.SendPropertyChanging();
					this._CategoriesName = value;
					this.SendPropertyChanged("CategoriesName");
					this.OnCategoriesNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
		public System.Nullable<bool> IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamplateDetailJson", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TeamplateDetailJson
		{
			get
			{
				return this._TeamplateDetailJson;
			}
			set
			{
				if ((this._TeamplateDetailJson != value))
				{
					this.OnTeamplateDetailJsonChanging(value);
					this.SendPropertyChanging();
					this._TeamplateDetailJson = value;
					this.SendPropertyChanged("TeamplateDetailJson");
					this.OnTeamplateDetailJsonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Products", ThisKey="CategoriesID", OtherKey="CategoriesID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Follow")]
	public partial class Follow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FollowIDFrom;
		
		private int _FollowIDTo;
		
		private int _FollowType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFollowIDFromChanging(int value);
    partial void OnFollowIDFromChanged();
    partial void OnFollowIDToChanging(int value);
    partial void OnFollowIDToChanged();
    partial void OnFollowTypeChanging(int value);
    partial void OnFollowTypeChanged();
    #endregion
		
		public Follow()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowIDFrom", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FollowIDFrom
		{
			get
			{
				return this._FollowIDFrom;
			}
			set
			{
				if ((this._FollowIDFrom != value))
				{
					this.OnFollowIDFromChanging(value);
					this.SendPropertyChanging();
					this._FollowIDFrom = value;
					this.SendPropertyChanged("FollowIDFrom");
					this.OnFollowIDFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowIDTo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FollowIDTo
		{
			get
			{
				return this._FollowIDTo;
			}
			set
			{
				if ((this._FollowIDTo != value))
				{
					this.OnFollowIDToChanging(value);
					this.SendPropertyChanging();
					this._FollowIDTo = value;
					this.SendPropertyChanged("FollowIDTo");
					this.OnFollowIDToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowType", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FollowType
		{
			get
			{
				return this._FollowType;
			}
			set
			{
				if ((this._FollowType != value))
				{
					this.OnFollowTypeChanging(value);
					this.SendPropertyChanging();
					this._FollowType = value;
					this.SendPropertyChanged("FollowType");
					this.OnFollowTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ganeral")]
	public partial class Ganeral
	{
		
		private string _EMailContact;
		
		public Ganeral()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMailContact", DbType="NVarChar(50)")]
		public string EMailContact
		{
			get
			{
				return this._EMailContact;
			}
			set
			{
				if ((this._EMailContact != value))
				{
					this._EMailContact = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Image")]
	public partial class Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ImageID;
		
		private string _ImageName;
		
		private string _Description;
		
		private string _Path;
		
		private System.Nullable<bool> _IsDelete;
		
		private EntitySet<Product_Image> _Product_Images;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIDChanging(int value);
    partial void OnImageIDChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public Image()
		{
			this._Product_Images = new EntitySet<Product_Image>(new Action<Product_Image>(this.attach_Product_Images), new Action<Product_Image>(this.detach_Product_Images));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="NVarChar(100)")]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(100)")]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
		public System.Nullable<bool> IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Image_Product_Image", Storage="_Product_Images", ThisKey="ImageID", OtherKey="ImageID")]
		public EntitySet<Product_Image> Product_Images
		{
			get
			{
				return this._Product_Images;
			}
			set
			{
				this._Product_Images.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Product_Images(Product_Image entity)
		{
			this.SendPropertyChanging();
			entity.Image = this;
		}
		
		private void detach_Product_Images(Product_Image entity)
		{
			this.SendPropertyChanging();
			entity.Image = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderID;
		
		private System.Nullable<int> _StatusID;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _UserID;
		
		private string _RecipientName;
		
		private string _RecipientAddress;
		
		private string _RecipientTel;
		
		private string _EMail;
		
		private string _Description;
		
		private System.Nullable<int> _TransportFee;
		
		private System.Nullable<decimal> _TotalMonney;
		
		private System.Nullable<int> _StoreID;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntityRef<StatusOrder> _StatusOrder;
		
		private EntityRef<Store> _Store;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnStatusIDChanging(System.Nullable<int> value);
    partial void OnStatusIDChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRecipientNameChanging(string value);
    partial void OnRecipientNameChanged();
    partial void OnRecipientAddressChanging(string value);
    partial void OnRecipientAddressChanged();
    partial void OnRecipientTelChanging(string value);
    partial void OnRecipientTelChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTransportFeeChanging(System.Nullable<int> value);
    partial void OnTransportFeeChanged();
    partial void OnTotalMonneyChanging(System.Nullable<decimal> value);
    partial void OnTotalMonneyChanged();
    partial void OnStoreIDChanging(System.Nullable<int> value);
    partial void OnStoreIDChanged();
    #endregion
		
		public Order()
		{
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._StatusOrder = default(EntityRef<StatusOrder>);
			this._Store = default(EntityRef<Store>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int")]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._StatusOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientName", DbType="NVarChar(100)")]
		public string RecipientName
		{
			get
			{
				return this._RecipientName;
			}
			set
			{
				if ((this._RecipientName != value))
				{
					this.OnRecipientNameChanging(value);
					this.SendPropertyChanging();
					this._RecipientName = value;
					this.SendPropertyChanged("RecipientName");
					this.OnRecipientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientAddress", DbType="NVarChar(200)")]
		public string RecipientAddress
		{
			get
			{
				return this._RecipientAddress;
			}
			set
			{
				if ((this._RecipientAddress != value))
				{
					this.OnRecipientAddressChanging(value);
					this.SendPropertyChanging();
					this._RecipientAddress = value;
					this.SendPropertyChanged("RecipientAddress");
					this.OnRecipientAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientTel", DbType="NVarChar(20)")]
		public string RecipientTel
		{
			get
			{
				return this._RecipientTel;
			}
			set
			{
				if ((this._RecipientTel != value))
				{
					this.OnRecipientTelChanging(value);
					this.SendPropertyChanging();
					this._RecipientTel = value;
					this.SendPropertyChanged("RecipientTel");
					this.OnRecipientTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(100)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportFee", DbType="Int")]
		public System.Nullable<int> TransportFee
		{
			get
			{
				return this._TransportFee;
			}
			set
			{
				if ((this._TransportFee != value))
				{
					this.OnTransportFeeChanging(value);
					this.SendPropertyChanging();
					this._TransportFee = value;
					this.SendPropertyChanged("TransportFee");
					this.OnTransportFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMonney", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TotalMonney
		{
			get
			{
				return this._TotalMonney;
			}
			set
			{
				if ((this._TotalMonney != value))
				{
					this.OnTotalMonneyChanging(value);
					this.SendPropertyChanging();
					this._TotalMonney = value;
					this.SendPropertyChanged("TotalMonney");
					this.OnTotalMonneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int")]
		public System.Nullable<int> StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_OrderDetails", ThisKey="OrderID", OtherKey="OrderID")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusOrder_Order", Storage="_StatusOrder", ThisKey="StatusID", OtherKey="StatusID", IsForeignKey=true)]
		public StatusOrder StatusOrder
		{
			get
			{
				return this._StatusOrder.Entity;
			}
			set
			{
				StatusOrder previousValue = this._StatusOrder.Entity;
				if (((previousValue != value) 
							|| (this._StatusOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusOrder.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._StatusOrder.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._StatusID = value.StatusID;
					}
					else
					{
						this._StatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StatusOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_Order", Storage="_Store", ThisKey="StoreID", OtherKey="StoreID", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._StoreID = value.StoreID;
					}
					else
					{
						this._StoreID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDetail")]
	public partial class OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderDetailID;
		
		private System.Nullable<int> _ProductID;
		
		private System.Nullable<int> _Amount;
		
		private System.Nullable<decimal> _PriceCurrent;
		
		private System.Nullable<int> _OrderID;
		
		private System.Nullable<bool> _IsDelete;
		
		private EntityRef<Order> _Order;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderDetailIDChanging(int value);
    partial void OnOrderDetailIDChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnPriceCurrentChanging(System.Nullable<decimal> value);
    partial void OnPriceCurrentChanged();
    partial void OnOrderIDChanging(System.Nullable<int> value);
    partial void OnOrderIDChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public OrderDetail()
		{
			this._Order = default(EntityRef<Order>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderDetailID
		{
			get
			{
				return this._OrderDetailID;
			}
			set
			{
				if ((this._OrderDetailID != value))
				{
					this.OnOrderDetailIDChanging(value);
					this.SendPropertyChanging();
					this._OrderDetailID = value;
					this.SendPropertyChanged("OrderDetailID");
					this.OnOrderDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int")]
		public System.Nullable<int> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceCurrent", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PriceCurrent
		{
			get
			{
				return this._PriceCurrent;
			}
			set
			{
				if ((this._PriceCurrent != value))
				{
					this.OnPriceCurrentChanging(value);
					this.SendPropertyChanging();
					this._PriceCurrent = value;
					this.SendPropertyChanged("PriceCurrent");
					this.OnPriceCurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int")]
		public System.Nullable<int> OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
		public System.Nullable<bool> IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_Order", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._OrderID = value.OrderID;
					}
					else
					{
						this._OrderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderDetail", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private string _ProductName;
		
		private string _Description;
		
		private System.Nullable<decimal> _PriceCurrent;
		
		private System.Nullable<int> _CategoriesID;
		
		private System.Nullable<int> _StoreID;
		
		private System.Nullable<int> _TotalLike;
		
		private System.Nullable<int> _TotalComment;
		
		private System.Nullable<int> _StatusID;
		
		private System.Nullable<int> _ImageID;
		
		private string _MoreDetailJson;
		
		private System.Nullable<int> _TotalBuy;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntitySet<Product_Image> _Product_Images;
		
		private EntitySet<Product_Like> _Product_Likes;
		
		private EntitySet<CommentProduct> _CommentProducts;
		
		private EntityRef<Category> _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceCurrentChanging(System.Nullable<decimal> value);
    partial void OnPriceCurrentChanged();
    partial void OnCategoriesIDChanging(System.Nullable<int> value);
    partial void OnCategoriesIDChanged();
    partial void OnStoreIDChanging(System.Nullable<int> value);
    partial void OnStoreIDChanged();
    partial void OnTotalLikeChanging(System.Nullable<int> value);
    partial void OnTotalLikeChanged();
    partial void OnTotalCommentChanging(System.Nullable<int> value);
    partial void OnTotalCommentChanged();
    partial void OnStatusIDChanging(System.Nullable<int> value);
    partial void OnStatusIDChanged();
    partial void OnImageIDChanging(System.Nullable<int> value);
    partial void OnImageIDChanged();
    partial void OnMoreDetailJsonChanging(string value);
    partial void OnMoreDetailJsonChanged();
    partial void OnTotalBuyChanging(System.Nullable<int> value);
    partial void OnTotalBuyChanged();
    #endregion
		
		public Product()
		{
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._Product_Images = new EntitySet<Product_Image>(new Action<Product_Image>(this.attach_Product_Images), new Action<Product_Image>(this.detach_Product_Images));
			this._Product_Likes = new EntitySet<Product_Like>(new Action<Product_Like>(this.attach_Product_Likes), new Action<Product_Like>(this.detach_Product_Likes));
			this._CommentProducts = new EntitySet<CommentProduct>(new Action<CommentProduct>(this.attach_CommentProducts), new Action<CommentProduct>(this.detach_CommentProducts));
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(200)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceCurrent", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PriceCurrent
		{
			get
			{
				return this._PriceCurrent;
			}
			set
			{
				if ((this._PriceCurrent != value))
				{
					this.OnPriceCurrentChanging(value);
					this.SendPropertyChanging();
					this._PriceCurrent = value;
					this.SendPropertyChanged("PriceCurrent");
					this.OnPriceCurrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoriesID", DbType="Int")]
		public System.Nullable<int> CategoriesID
		{
			get
			{
				return this._CategoriesID;
			}
			set
			{
				if ((this._CategoriesID != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoriesIDChanging(value);
					this.SendPropertyChanging();
					this._CategoriesID = value;
					this.SendPropertyChanged("CategoriesID");
					this.OnCategoriesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int")]
		public System.Nullable<int> StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLike", DbType="Int")]
		public System.Nullable<int> TotalLike
		{
			get
			{
				return this._TotalLike;
			}
			set
			{
				if ((this._TotalLike != value))
				{
					this.OnTotalLikeChanging(value);
					this.SendPropertyChanging();
					this._TotalLike = value;
					this.SendPropertyChanged("TotalLike");
					this.OnTotalLikeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalComment", DbType="Int")]
		public System.Nullable<int> TotalComment
		{
			get
			{
				return this._TotalComment;
			}
			set
			{
				if ((this._TotalComment != value))
				{
					this.OnTotalCommentChanging(value);
					this.SendPropertyChanging();
					this._TotalComment = value;
					this.SendPropertyChanged("TotalComment");
					this.OnTotalCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int")]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", DbType="Int")]
		public System.Nullable<int> ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoreDetailJson", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string MoreDetailJson
		{
			get
			{
				return this._MoreDetailJson;
			}
			set
			{
				if ((this._MoreDetailJson != value))
				{
					this.OnMoreDetailJsonChanging(value);
					this.SendPropertyChanging();
					this._MoreDetailJson = value;
					this.SendPropertyChanged("MoreDetailJson");
					this.OnMoreDetailJsonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBuy", DbType="Int")]
		public System.Nullable<int> TotalBuy
		{
			get
			{
				return this._TotalBuy;
			}
			set
			{
				if ((this._TotalBuy != value))
				{
					this.OnTotalBuyChanging(value);
					this.SendPropertyChanging();
					this._TotalBuy = value;
					this.SendPropertyChanged("TotalBuy");
					this.OnTotalBuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderDetail", Storage="_OrderDetails", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_Image", Storage="_Product_Images", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<Product_Image> Product_Images
		{
			get
			{
				return this._Product_Images;
			}
			set
			{
				this._Product_Images.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_Like", Storage="_Product_Likes", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<Product_Like> Product_Likes
		{
			get
			{
				return this._Product_Likes;
			}
			set
			{
				this._Product_Likes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_CommentProduct", Storage="_CommentProducts", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<CommentProduct> CommentProducts
		{
			get
			{
				return this._CommentProducts;
			}
			set
			{
				this._CommentProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Category", ThisKey="CategoriesID", OtherKey="CategoriesID", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._CategoriesID = value.CategoriesID;
					}
					else
					{
						this._CategoriesID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Product_Images(Product_Image entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Product_Images(Product_Image entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_Product_Likes(Product_Like entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Product_Likes(Product_Like entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_CommentProducts(CommentProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_CommentProducts(CommentProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_Image")]
	public partial class Product_Image : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private int _ImageID;
		
		private EntityRef<Image> _Image;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnImageIDChanging(int value);
    partial void OnImageIDChanged();
    #endregion
		
		public Product_Image()
		{
			this._Image = default(EntityRef<Image>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					if (this._Image.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Image_Product_Image", Storage="_Image", ThisKey="ImageID", OtherKey="ImageID", IsForeignKey=true)]
		public Image Image
		{
			get
			{
				return this._Image.Entity;
			}
			set
			{
				Image previousValue = this._Image.Entity;
				if (((previousValue != value) 
							|| (this._Image.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Image.Entity = null;
						previousValue.Product_Images.Remove(this);
					}
					this._Image.Entity = value;
					if ((value != null))
					{
						value.Product_Images.Add(this);
						this._ImageID = value.ImageID;
					}
					else
					{
						this._ImageID = default(int);
					}
					this.SendPropertyChanged("Image");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_Image", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Product_Images.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Product_Images.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product_Likes")]
	public partial class Product_Like : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _ProductID;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    #endregion
		
		public Product_Like()
		{
			this._Product = default(EntityRef<Product>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Product_Like", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Product_Likes.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Product_Likes.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Product_Like", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Product_Likes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Product_Likes.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatusOrder")]
	public partial class StatusOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _StatusName;
		
		private string _Description;
		
		private System.Nullable<bool> _IsDelete;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public StatusOrder()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(100)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
		public System.Nullable<bool> IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusOrder_Order", Storage="_Orders", ThisKey="StatusID", OtherKey="StatusID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.StatusOrder = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.StatusOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatusProduct")]
	public partial class StatusProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _StatusName;
		
		private string _Description;
		
		private System.Nullable<bool> _IsDelete;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public StatusProduct()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
		public System.Nullable<bool> IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatusStore")]
	public partial class StatusStore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _StatusName;
		
		private string _Description;
		
		private System.Nullable<bool> _IsDelete;
		
		private EntitySet<Store> _Stores;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public StatusStore()
		{
			this._Stores = new EntitySet<Store>(new Action<Store>(this.attach_Stores), new Action<Store>(this.detach_Stores));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(100)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
		public System.Nullable<bool> IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusStore_Store", Storage="_Stores", ThisKey="StatusID", OtherKey="StatusID")]
		public EntitySet<Store> Stores
		{
			get
			{
				return this._Stores;
			}
			set
			{
				this._Stores.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stores(Store entity)
		{
			this.SendPropertyChanging();
			entity.StatusStore = this;
		}
		
		private void detach_Stores(Store entity)
		{
			this.SendPropertyChanging();
			entity.StatusStore = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Store")]
	public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StoreID;
		
		private string _StoreName;
		
		private string _Address;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _StatusID;
		
		private string _Slogan;
		
		private System.Nullable<int> _ImageProfileID;
		
		private System.Nullable<int> _ImageCoverID;
		
		private System.Nullable<decimal> _ShipFee;
		
		private System.Nullable<int> _TotalFllowers;
		
		private System.Nullable<int> _TotalFllowing;
		
		private System.Nullable<int> _Tel;
		
		private EntityRef<Account> _Account;
		
		private EntitySet<Order> _Orders;
		
		private EntityRef<StatusStore> _StatusStore;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStoreIDChanging(int value);
    partial void OnStoreIDChanged();
    partial void OnStoreNameChanging(string value);
    partial void OnStoreNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnStatusIDChanging(System.Nullable<int> value);
    partial void OnStatusIDChanged();
    partial void OnSloganChanging(string value);
    partial void OnSloganChanged();
    partial void OnImageProfileIDChanging(System.Nullable<int> value);
    partial void OnImageProfileIDChanged();
    partial void OnImageCoverIDChanging(System.Nullable<int> value);
    partial void OnImageCoverIDChanged();
    partial void OnShipFeeChanging(System.Nullable<decimal> value);
    partial void OnShipFeeChanged();
    partial void OnTotalFllowersChanging(System.Nullable<int> value);
    partial void OnTotalFllowersChanged();
    partial void OnTotalFllowingChanging(System.Nullable<int> value);
    partial void OnTotalFllowingChanged();
    partial void OnTelChanging(System.Nullable<int> value);
    partial void OnTelChanged();
    #endregion
		
		public Store()
		{
			this._Account = default(EntityRef<Account>);
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._StatusStore = default(EntityRef<StatusStore>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreName", DbType="NVarChar(100)")]
		public string StoreName
		{
			get
			{
				return this._StoreName;
			}
			set
			{
				if ((this._StoreName != value))
				{
					this.OnStoreNameChanging(value);
					this.SendPropertyChanging();
					this._StoreName = value;
					this.SendPropertyChanged("StoreName");
					this.OnStoreNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int")]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._StatusStore.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slogan", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Slogan
		{
			get
			{
				return this._Slogan;
			}
			set
			{
				if ((this._Slogan != value))
				{
					this.OnSloganChanging(value);
					this.SendPropertyChanging();
					this._Slogan = value;
					this.SendPropertyChanged("Slogan");
					this.OnSloganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageProfileID", DbType="Int")]
		public System.Nullable<int> ImageProfileID
		{
			get
			{
				return this._ImageProfileID;
			}
			set
			{
				if ((this._ImageProfileID != value))
				{
					this.OnImageProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ImageProfileID = value;
					this.SendPropertyChanged("ImageProfileID");
					this.OnImageProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageCoverID", DbType="Int")]
		public System.Nullable<int> ImageCoverID
		{
			get
			{
				return this._ImageCoverID;
			}
			set
			{
				if ((this._ImageCoverID != value))
				{
					this.OnImageCoverIDChanging(value);
					this.SendPropertyChanging();
					this._ImageCoverID = value;
					this.SendPropertyChanged("ImageCoverID");
					this.OnImageCoverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipFee", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ShipFee
		{
			get
			{
				return this._ShipFee;
			}
			set
			{
				if ((this._ShipFee != value))
				{
					this.OnShipFeeChanging(value);
					this.SendPropertyChanging();
					this._ShipFee = value;
					this.SendPropertyChanged("ShipFee");
					this.OnShipFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFllowers", DbType="Int")]
		public System.Nullable<int> TotalFllowers
		{
			get
			{
				return this._TotalFllowers;
			}
			set
			{
				if ((this._TotalFllowers != value))
				{
					this.OnTotalFllowersChanging(value);
					this.SendPropertyChanging();
					this._TotalFllowers = value;
					this.SendPropertyChanged("TotalFllowers");
					this.OnTotalFllowersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFllowing", DbType="Int")]
		public System.Nullable<int> TotalFllowing
		{
			get
			{
				return this._TotalFllowing;
			}
			set
			{
				if ((this._TotalFllowing != value))
				{
					this.OnTotalFllowingChanging(value);
					this.SendPropertyChanging();
					this._TotalFllowing = value;
					this.SendPropertyChanged("TotalFllowing");
					this.OnTotalFllowingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="Int")]
		public System.Nullable<int> Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_Account", Storage="_Account", ThisKey="StoreID", OtherKey="AccountID", IsUnique=true, IsForeignKey=false)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Store = null;
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Store = this;
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_Order", Storage="_Orders", ThisKey="StoreID", OtherKey="StoreID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StatusStore_Store", Storage="_StatusStore", ThisKey="StatusID", OtherKey="StatusID", IsForeignKey=true)]
		public StatusStore StatusStore
		{
			get
			{
				return this._StatusStore.Entity;
			}
			set
			{
				StatusStore previousValue = this._StatusStore.Entity;
				if (((previousValue != value) 
							|| (this._StatusStore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusStore.Entity = null;
						previousValue.Stores.Remove(this);
					}
					this._StatusStore.Entity = value;
					if ((value != null))
					{
						value.Stores.Add(this);
						this._StatusID = value.StatusID;
					}
					else
					{
						this._StatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StatusStore");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _About;
		
		private System.Nullable<int> _ImageAvartarID;
		
		private string _Address;
		
		private System.Nullable<int> _UserTypeID;
		
		private System.Nullable<bool> _Isdelete;
		
		private System.Nullable<int> _TotalFllowers;
		
		private System.Nullable<int> _TotalFllowing;
		
		private System.Nullable<int> _TotalLikes;
		
		private EntityRef<Account> _Account;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<Product_Like> _Product_Likes;
		
		private EntitySet<CommentProduct> _CommentProducts;
		
		private EntityRef<UserType> _UserType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAboutChanging(string value);
    partial void OnAboutChanged();
    partial void OnImageAvartarIDChanging(System.Nullable<int> value);
    partial void OnImageAvartarIDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnUserTypeIDChanging(System.Nullable<int> value);
    partial void OnUserTypeIDChanged();
    partial void OnIsdeleteChanging(System.Nullable<bool> value);
    partial void OnIsdeleteChanged();
    partial void OnTotalFllowersChanging(System.Nullable<int> value);
    partial void OnTotalFllowersChanged();
    partial void OnTotalFllowingChanging(System.Nullable<int> value);
    partial void OnTotalFllowingChanged();
    partial void OnTotalLikesChanging(System.Nullable<int> value);
    partial void OnTotalLikesChanged();
    #endregion
		
		public User()
		{
			this._Account = default(EntityRef<Account>);
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Product_Likes = new EntitySet<Product_Like>(new Action<Product_Like>(this.attach_Product_Likes), new Action<Product_Like>(this.detach_Product_Likes));
			this._CommentProducts = new EntitySet<CommentProduct>(new Action<CommentProduct>(this.attach_CommentProducts), new Action<CommentProduct>(this.detach_CommentProducts));
			this._UserType = default(EntityRef<UserType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_About", DbType="NVarChar(200)")]
		public string About
		{
			get
			{
				return this._About;
			}
			set
			{
				if ((this._About != value))
				{
					this.OnAboutChanging(value);
					this.SendPropertyChanging();
					this._About = value;
					this.SendPropertyChanged("About");
					this.OnAboutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageAvartarID", DbType="Int")]
		public System.Nullable<int> ImageAvartarID
		{
			get
			{
				return this._ImageAvartarID;
			}
			set
			{
				if ((this._ImageAvartarID != value))
				{
					this.OnImageAvartarIDChanging(value);
					this.SendPropertyChanging();
					this._ImageAvartarID = value;
					this.SendPropertyChanged("ImageAvartarID");
					this.OnImageAvartarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeID", DbType="Int")]
		public System.Nullable<int> UserTypeID
		{
			get
			{
				return this._UserTypeID;
			}
			set
			{
				if ((this._UserTypeID != value))
				{
					if (this._UserType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserTypeID = value;
					this.SendPropertyChanged("UserTypeID");
					this.OnUserTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Isdelete", DbType="Bit")]
		public System.Nullable<bool> Isdelete
		{
			get
			{
				return this._Isdelete;
			}
			set
			{
				if ((this._Isdelete != value))
				{
					this.OnIsdeleteChanging(value);
					this.SendPropertyChanging();
					this._Isdelete = value;
					this.SendPropertyChanged("Isdelete");
					this.OnIsdeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFllowers", DbType="Int")]
		public System.Nullable<int> TotalFllowers
		{
			get
			{
				return this._TotalFllowers;
			}
			set
			{
				if ((this._TotalFllowers != value))
				{
					this.OnTotalFllowersChanging(value);
					this.SendPropertyChanging();
					this._TotalFllowers = value;
					this.SendPropertyChanged("TotalFllowers");
					this.OnTotalFllowersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFllowing", DbType="Int")]
		public System.Nullable<int> TotalFllowing
		{
			get
			{
				return this._TotalFllowing;
			}
			set
			{
				if ((this._TotalFllowing != value))
				{
					this.OnTotalFllowingChanging(value);
					this.SendPropertyChanging();
					this._TotalFllowing = value;
					this.SendPropertyChanged("TotalFllowing");
					this.OnTotalFllowingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLikes", DbType="Int")]
		public System.Nullable<int> TotalLikes
		{
			get
			{
				return this._TotalLikes;
			}
			set
			{
				if ((this._TotalLikes != value))
				{
					this.OnTotalLikesChanging(value);
					this.SendPropertyChanging();
					this._TotalLikes = value;
					this.SendPropertyChanged("TotalLikes");
					this.OnTotalLikesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Account", Storage="_Account", ThisKey="UserID", OtherKey="AccountID", IsUnique=true, IsForeignKey=false)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.User = null;
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_Orders", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Product_Like", Storage="_Product_Likes", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<Product_Like> Product_Likes
		{
			get
			{
				return this._Product_Likes;
			}
			set
			{
				this._Product_Likes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CommentProduct", Storage="_CommentProducts", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<CommentProduct> CommentProducts
		{
			get
			{
				return this._CommentProducts;
			}
			set
			{
				this._CommentProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserType_User", Storage="_UserType", ThisKey="UserTypeID", OtherKey="UserTypeID", IsForeignKey=true)]
		public UserType UserType
		{
			get
			{
				return this._UserType.Entity;
			}
			set
			{
				UserType previousValue = this._UserType.Entity;
				if (((previousValue != value) 
							|| (this._UserType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserType.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._UserType.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._UserTypeID = value.UserTypeID;
					}
					else
					{
						this._UserTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Product_Likes(Product_Like entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Product_Likes(Product_Like entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CommentProducts(CommentProduct entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CommentProducts(CommentProduct entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommentProduct")]
	public partial class CommentProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommentID;
		
		private string _CommentContent;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _ProductID;
		
		private EntityRef<User> _User;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommentIDChanging(int value);
    partial void OnCommentIDChanged();
    partial void OnCommentContentChanging(string value);
    partial void OnCommentContentChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    #endregion
		
		public CommentProduct()
		{
			this._User = default(EntityRef<User>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CommentContent
		{
			get
			{
				return this._CommentContent;
			}
			set
			{
				if ((this._CommentContent != value))
				{
					this.OnCommentContentChanging(value);
					this.SendPropertyChanging();
					this._CommentContent = value;
					this.SendPropertyChanged("CommentContent");
					this.OnCommentContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int")]
		public System.Nullable<int> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CommentProduct", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CommentProducts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CommentProducts.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_CommentProduct", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.CommentProducts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.CommentProducts.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Product_Likes_GetByUserIdProductIdResult
	{
		
		private int _UserID;
		
		private int _ProductID;
		
		public Product_Likes_GetByUserIdProductIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this._ProductID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
